{"version":3,"file":"friendly-name-parser.min.js","mappings":"0BAAA,MAAMA,EAAe,EAAQ,IAEvBC,EAAW,CAChBC,KAAM,qBACNC,GAAI,gEACJC,IAAK,oBACLC,YAAa,yHACbC,kBAAmB,mDAGpBC,EAAOC,QAAUC,IAChB,MAAMC,EAAU,CACfC,MAAOF,EACPG,OAAQZ,EAAaS,EAAaR,EAASI,aAC3CQ,OAAQZ,EAASC,KAAKY,KAAKL,GAC3BM,KAAMd,EAASE,GAAGW,KAAKL,GACvBO,MAAOf,EAASG,IAAIU,KAAKL,GACzBJ,YAAaJ,EAASI,YAAYS,KAAKL,GACvCQ,qBAAsBhB,EAASK,kBAAkBQ,KAAKL,IAUvD,OAPAC,EAAQQ,aAAeC,OAAOC,OAAOV,GAASW,UAAS,GACvDX,EAAQY,SAAWH,OAAOI,KAAKb,GAC7Bc,QAAOC,IAAwB,IAAjBf,EAAQe,IAAyB,gBAARA,IACvCC,KAAID,GAAOA,EAAIE,QAAQ,KAAM,IAC5BA,QAAQ,cAAe,gBACvBA,QAAQ,uBAAwB,wBAE5BjB,CAAO,C,SC5Bf,MAAMkB,EAAW,kBACXC,EAAa,kBACbC,EAAe,WACfC,EAAc,iBACdC,EAAoB,uCACpBC,EAAoB,oCACpBC,EAAoB,UACpBC,EAAuB,UACvBC,EAA8B,YAE9BC,EAAiB,IAAIC,IAAI,CAAC,MAAO,IAAK,KAAM,MAAO,MAAO,KAAM,MAAO,MAAO,KAAM,KAAM,KAAM,OAAQ,OACxGC,EAAe,CACpB,KAAQ,OACR,IAAO,MACP,GAAM,KACN,WAAc,cAGfhC,EAAOC,QAAU,CAACC,EAAaJ,KAC9B,MAAMmC,EAAa/B,EAAYgC,MAAMZ,GACrC,GAAIW,EAAY,CACf,MAEME,EAFQF,EAAW,GACFG,MAAM,KAAK,GAEhChB,QAAQ,YAAa,IACrBgB,MAAM,OACNjB,KAAIkB,GAAQA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,GAAGC,gBACzDC,KAAK,IAEP,GAAIP,EAAcQ,QAAU,EAAG,OAAOR,CACvC,CAEA,OAAOjC,EACLkB,QAAQC,EAAU,IAClBD,QAAQtB,EAAa,IACrBsB,QAAQG,EAAc,IACtBH,QAAQI,EAAa,IACrBJ,QAAQK,EAAmB,IAC3BgB,cACArB,QAAQM,EAAmB,IAC3BN,QAAQO,EAAmB,KAC3BP,QAAQQ,EAAsB,KAC9BR,QAAQS,EAA6B,MACrCO,MAAM,OACNjB,KAAI,CAACkB,EAAMO,KACXP,EAAOL,EAAaK,EAAKI,gBAAkBJ,EAE7B,IAAVO,GAAgBd,EAAee,IAAIR,EAAKI,eAGpCJ,EAAKI,cAFLJ,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,MAKlDE,KAAK,KACLtB,QAAQ,UAAW,KACnBA,QAAQ,MAAO,IACf0B,MAAM,C,GCvDLC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAalD,QAGrB,IAAID,EAAS+C,EAAyBG,GAAY,CAGjDjD,QAAS,CAAC,GAOX,OAHAoD,EAAoBH,GAAUlD,EAAQA,EAAOC,QAASgD,GAG/CjD,EAAOC,OACf,CCnB0BgD,CAAoB,I","sources":["webpack://FriendlyNameParser/./src/index.js","webpack://FriendlyNameParser/./src/utils/pretty.js","webpack://FriendlyNameParser/webpack/bootstrap","webpack://FriendlyNameParser/webpack/startup"],"sourcesContent":["const prettyOutput = require('./utils/pretty.js');\r\n\r\nconst patterns = {\r\n\thtml: /<\\/?[a-z][\\s\\S]*>/i,\r\n\tjs: /\\b(function|var|let|const|if|for|while|switch|return|alert)\\b/,\r\n\tphp: /<\\?php[\\s\\S]*\\?>/i,\r\n\tbreakSpaces: /[\\u00A0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\u2006\\u2001\\u2002\\u2003\\u2004\\u2005\\u2007\\u2008\\u2009\\u200A]/g,\r\n\tmultilineComments: /\\/\\*[\\s\\S]*?\\*\\/|<!--[\\s\\S]*?-->|#.*(?:\\r?\\n|$)/,\r\n};\r\n\r\nmodule.exports = inputString => {\r\n\tconst results = {\r\n\t\tinput: inputString,\r\n\t\tpretty: prettyOutput(inputString, patterns.breakSpaces),\r\n\t\tisHTML: patterns.html.test(inputString),\r\n\t\tisJS: patterns.js.test(inputString),\r\n\t\tisPHP: patterns.php.test(inputString),\r\n\t\tbreakSpaces: patterns.breakSpaces.test(inputString),\r\n\t\thasMultilineComments: patterns.multilineComments.test(inputString),\r\n\t};\r\n\r\n\tresults.isPlainText = !Object.values(results).includes(true);\r\n\tresults.detected = Object.keys(results)\r\n\t\t.filter(key => results[key] === true && key !== 'isPlainText')\r\n\t\t.map(key => key.replace('is', '')\r\n\t\t\t.replace('breakSpaces', 'Break spaces')\r\n\t\t\t.replace('hasMultilineComments', 'Multiline comments'));\r\n\r\n\treturn results;\r\n};","const urlRegex = /https?:\\/\\/\\S+/g;\r\nconst emailRegex = /(\\S+)@\\S+\\.\\S+/g;\r\nconst htmlTagRegex = /<[^>]*>/g;\r\nconst phpTagRegex = /<\\?php.*?\\?>/gs;\r\nconst reservedWordRegex = /\\b(const|let|var|function|alert)\\b/gi;\r\nconst invalidCharsRegex = /[^a-z0-9\\s'ąęółśżźćńĄĘÓŁŚŻŹĆŃ~]/gi;\r\nconst multipleDotsRegex = /\\.{2,}/g;\r\nconst excessiveSpacesRegex = /\\s{3,}/g;\r\nconst spaceBeforePunctuationRegex = /\\s([,.])/g;\r\n\r\nconst lowerCaseWords = new Set(['the', 'a', 'an', 'and', 'but', 'or', 'for', 'nor', 'on', 'at', 'to', 'from', 'by']);\r\nconst specialCases = {\r\n\t'html': 'HTML',\r\n\t'css': 'CSS',\r\n\t'js': 'JS',\r\n\t'javascript': 'JavaScript',\r\n};\r\n\r\nmodule.exports = (inputString, breakSpaces) => {\r\n\tconst emailMatch = inputString.match(emailRegex);\r\n\tif (emailMatch) {\r\n\t\tconst email = emailMatch[0];\r\n\t\tconst username = email.split('@')[0];\r\n\t\tconst cleanUsername = username\r\n\t\t\t.replace(/[^\\w\\s]/gi, '')\r\n\t\t\t.split(/\\s+/)\r\n\t\t\t.map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n\t\t\t.join('');\r\n\r\n\t\tif (cleanUsername.length >= 4) return cleanUsername;\r\n\t}\r\n\r\n\treturn inputString\r\n\t\t.replace(urlRegex, '')\r\n\t\t.replace(breakSpaces, '')\r\n\t\t.replace(htmlTagRegex, '')\r\n\t\t.replace(phpTagRegex, '')\r\n\t\t.replace(reservedWordRegex, '')\r\n\t\t.toLowerCase()\r\n\t\t.replace(invalidCharsRegex, '')\r\n\t\t.replace(multipleDotsRegex, '.')\r\n\t\t.replace(excessiveSpacesRegex, ' ')\r\n\t\t.replace(spaceBeforePunctuationRegex, '$1')\r\n\t\t.split(/\\s+/)\r\n\t\t.map((word, index) => {\r\n\t\t\tword = specialCases[word.toLowerCase()] || word;\r\n\r\n\t\t\tif (index === 0 || !lowerCaseWords.has(word.toLowerCase())) {\r\n\t\t\t\treturn word.charAt(0).toUpperCase() + word.slice(1);\r\n\t\t\t} else {\r\n\t\t\t\treturn word.toLowerCase();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.join(' ')\r\n\t\t.replace(/\\s{2,}/g, ' ')\r\n\t\t.replace(/\\.$/, '')\r\n\t\t.trim();\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(44);\n"],"names":["prettyOutput","patterns","html","js","php","breakSpaces","multilineComments","module","exports","inputString","results","input","pretty","isHTML","test","isJS","isPHP","hasMultilineComments","isPlainText","Object","values","includes","detected","keys","filter","key","map","replace","urlRegex","emailRegex","htmlTagRegex","phpTagRegex","reservedWordRegex","invalidCharsRegex","multipleDotsRegex","excessiveSpacesRegex","spaceBeforePunctuationRegex","lowerCaseWords","Set","specialCases","emailMatch","match","cleanUsername","split","word","charAt","toUpperCase","slice","toLowerCase","join","length","index","has","trim","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}